openapi: 3.0.0
info:
  version: 3.0.0
  title: Universal REST API
  description: |
    Universal API provides a RESTful and uniform way to access blockchain resources,
    with a rich and reusable model across multiple protocols/cryptocurrencies.

    [Documentation](https://app.blockdaemon.com/docs/ubiquity)

    ### Currently supported protocols:

    * algorand
      * mainnet
    * bitcoin
      * mainnet/testnet
    * bitcoincash
      * mainnet/testnet
    * dogecoin
      * mainnet/testnet
    * ethereum
      * mainnet/goerli
    * litecoin
      * mainnet/testnet
    * near
      * mainnet/testnet
    * oasis
      * mainnet
    * optimism
      * mainnet
    * polkadot
      * mainnet/westend
    * polygon
      * mainnet
    * solana
      * mainnet/testnet
    * stellar
      * mainnet/testnet
    * tezos
      * mainnet
    * xrp
      * mainnet

    ##### Pagination
    Certain resources contain a lot of data, more than what's practical
    to return for a single request.
    With the help of pagination, the data is split across multiple responses.
    Each response returns a subset of the items requested, and a continuation token.

    To get the next batch of items, copy the returned continuation token
    to the continuation query parameter and repeat the request with the new URL.
    In case no continuation token is returned, there is no more data available.
  contact:
    name: Blockdaemon
    email: support@blockdaemon.com
    url: https://blockdaemon.com
  x-logo:
    url: https://storage.googleapis.com/blockdaemon-app-static-images/marketing/PNG/dark-logo.png
    altText: Blockdaemon logo
x-readme:
  samples-languages:
    - curl
    - go
    - javascript
    - python
    - node
servers:
  - url: https://svc.blockdaemon.com/universal/{version}
    description: Production server
    variables:
      version:
        enum:
          - v1
        default: v1
  - url: https://ubiquity.api.blockdaemon.com/{version}
    description: "[Legacy Auth] Production server"
    variables:
      version:
        enum:
          - v1
        default: v1
tags:
  - name: Protocol and Endpoint Support
  - name: Accounts
  - name: Blocks
  - name: Gas estimator
  - name: Transactions
security:
  - apiKeyAuthHeader: []
  - bearerAuth: []
paths:
  /:
    get:
      summary: Get the Protocols Overview
      operationId: GetProtocolsList
      tags:
        - Protocol and Endpoint Support
      description: |
        Provides a list of supported protocols and networks.
      responses:
        '200':
          description: Protocols overview
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protocols_overview'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /{protocol}/{network}:
    get:
      summary: Get the Protocol Info
      operationId: GetProtocolEndpoints
      tags:
        - Protocol and Endpoint Support
      description: |
        Provides information about supported endpoints and generic protocol information.
      parameters:
        - $ref: '#/components/parameters/protocol'
        - $ref: '#/components/parameters/network'
      responses:
        '200':
          description: Protocol overview
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protocol_detail'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /{protocol}/{network}/tx/estimate_fee:
    get:
      summary: Get the Gas Fee Estimation
      description: |
        Return gas fee estimation in decimals.

        Currently supported for **Bitcoin**, **Bitcoincash**, **Ethereum** and **Litecoin**. Endpoint will return 3 gas fee estimations: fast, medium and slow.
      operationId: GetGasFeeEstimate
      tags:
        - Gas estimator
      parameters:
        - in: path
          name: protocol
          required: true
          description: |
            Protocol handle, one of: `bitcoin`, `bitcoincash`, `ethereum`, `litecoin`.
          schema:
            type: string
            default: bitcoin
          examples:
            Bitcoin:
              value: bitcoin
        - $ref: '#/components/parameters/network'
      responses:
        '200':
          description: Protocols Overview
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fee_estimate'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /{protocol}/{network}/account/{address}:
    get:
      summary: Get a List of Balances for an Address
      operationId: GetListOfBalancesByAddress
      description: Returns a list of account balances by a user-defined account address for the supported currencies.
      tags:
        - Accounts
      parameters:
        - $ref: '#/components/parameters/protocol'
        - $ref: '#/components/parameters/network'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/assets'
      responses:
        '200':
          description: Balances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/balances'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /{protocol}/{network}/accounts:
    post:
      summary: Get a List of Balances for Multiple Adresses
      operationId: GetListOfBalancesByAddresses
      description: |
        Returns a list of account balances by a user-defined list of account addresses for the supported currencies. The maximum of account addresses allowed in the filter is 10.
      tags:
        - Accounts
      parameters:
        - $ref: '#/components/parameters/protocol'
        - $ref: '#/components/parameters/network'
        - $ref: '#/components/parameters/assets'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accounts_obj'
      responses:
        '200':
          description: Balances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accounts_balances'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /{protocol}/{network}/account/{address}/report:
    get:
      summary: Get a Financial Report for an Address between a Time Period
      operationId: GetReportByAddress
      description: |
        Returns a financial report by a user-defined account address between a time period. Default timescale is within the last 30 days.
      tags:
        - Accounts
      parameters:
        - in: path
          name: protocol
          required: true
          description: |
             Protocol handle, one of: `algorand`, `polkadot`, `tezos`.
          schema:
            type: string
            default: polkadot
          examples:
            Polkadot:
              value: polkadot
        - $ref: '#/components/parameters/network'
        - name: address
          in: path
          required: true
          description: The account address of the protocol.
          schema:
            type: string
            default: 12yi4uHFbnSUryffXT7Xq92fbGC3iXvCs3vz9HjVgpb4sBvL
          examples:
            DOT_address:
              value: 12yi4uHFbnSUryffXT7Xq92fbGC3iXvCs3vz9HjVgpb4sBvL
              description: Polkadot address
        - name: from
          in: query
          required: false
          description: Unix Timestamp from where to start
          schema:
            type: integer
          example: 961846434
        - name: to
          in: query
          required: false
          description: Unix Timestamp from where to end
          schema:
            type: integer
          example: 1119612834
        - name: page_token
          in: query
          required: false
          description: Continuation token from earlier response
          schema:
            type: string
          example: xyz
        - name: page_size
          in: query
          required: false
          description: |
            Max number of items to return in a response.
            Defaults to 50k and is capped at 100k.
          schema:
            type: integer
          example: 1000
      responses:
        '200':
          description: Account Activity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/report'
            text/csv:
              schema:
                type: string
                example: |
                  Protocol,PublicAddress,Currency,EventID,Block,BlockTimestamp,BlockTime,Hash,Action,Value,SenderAddress,TransactionFee,SenderReward,RecipientReward,Close,CloseAmount,CloseReward
                  Algorand,GXL2EQ6JV54MTMP2IXOTF5CJLS7GAWMRDZMOY7JZAPO72AQRDDYGD6OX3E,ALGO,RNEYUT3MRYGT5ENSLIC7LGJCJMW6BXNS6SAW7A25DTYRW4TFJ5JA,8986217,1599745403,2020-09-10 13:43:23 +0000 UTC,RNEYUT3MRYGT5ENSLIC7LGJCJMW6BXNS6SAW7A25DTYRW4TFJ5JA,pay,1,T3BYUTYZCWV7UVK7IFYPC2UKH5VNBGVP4PUKSUBF5F6GQ244Y4I2XUWCQM,0.001,0.000003,0,,0,0
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        '413':
          description: Too Many Transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /{protocol}/{network}/account/{address}/utxo:
    get:
      summary: Get a List of Transaction Inputs and Outputs
      operationId: GetUTXOByAccount
      description: |
        Returns the transaction inputs and outputs following the BTC's UTXO model definition by a user-definied account address.

        The response is paginated: use the returned `next_page_token` token as a query parameter to get the next page.
      tags:
        - Accounts
      parameters:
        - in: path
          name: protocol
          required: true
          description: |
             Protocol handle, one of: `bitcoin`, `bitcoincash`, `dogecoin`, `litecoin`.
          schema:
            type: string
            default: bitcoin
          examples:
            Bitcoin:
              value: bitcoin
        - $ref: '#/components/parameters/network'
        - $ref: '#/components/parameters/address'
        - name: spent
          in: query
          description: Whether the transaction output was spent or not
          schema:
            type: boolean
          example: true
        - name: from
          in: query
          required: false
          description: Unix Timestamp from where to start
          schema:
            type: integer
          example: 961846434
        - name: to
          in: query
          required: false
          description: Unix Timestamp from where to end
          schema:
            type: integer
          example: 1119612834
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/page_token'
        - name: page_size
          in: query
          required: false
          description: |
            Max number of items to return in a response.
            Defaults to 50k and is capped at 100k.
          schema:
            type: integer
          example: 1000
      responses:
        '200':
          description: Transaction outputs filtered by the given parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tx_outputs'
            text/csv:
              schema:
                type: string
                example: |
                  Protocol,PublicAddress,Currency,EventID,Block,BlockTimestamp,BlockTime,Hash,Action,Value,SenderAddress,TransactionFee,SenderReward,RecipientReward,Close,CloseAmount,CloseReward
                  Algorand,GXL2EQ6JV54MTMP2IXOTF5CJLS7GAWMRDZMOY7JZAPO72AQRDDYGD6OX3E,ALGO,RNEYUT3MRYGT5ENSLIC7LGJCJMW6BXNS6SAW7A25DTYRW4TFJ5JA,8986217,1599745403,2020-09-10 13:43:23 +0000 UTC,RNEYUT3MRYGT5ENSLIC7LGJCJMW6BXNS6SAW7A25DTYRW4TFJ5JA,pay,1,T3BYUTYZCWV7UVK7IFYPC2UKH5VNBGVP4PUKSUBF5F6GQ244Y4I2XUWCQM,0.001,0.000003,0,,0,0
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        '413':
          description: Too Many Transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /{protocol}/{network}/tx/{hash}/confirmations:
    get:
      summary: Get the Transaction Confirmations
      description: |
        Returns the number of transaction confirmations by a user-defined transaction hash.
      operationId: GetTxConfirmations
      tags:
        - Transactions
      parameters:
        - $ref: '#/components/parameters/protocol'
        - $ref: '#/components/parameters/network'
        - $ref: '#/components/parameters/tx-hash'
      responses:
        '200':
          description: Transaction confirmations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tx_confirmation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /{protocol}/{network}/account/{address}/txs:
    get:
      summary: Get a List of Transactions
      description: |
        Returns the transactions that an address was involved with, from newest to oldest.

        The response is paginated: use the returned `next_page_token` token as a query parameter to get the next page.
      operationId: GetTxsByAddress
      tags:
        - Accounts
      parameters:
        - $ref: '#/components/parameters/protocol'
        - $ref: '#/components/parameters/network'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/assets'
        - name: from
          in: query
          required: false
          description: Unix Timestamp from where to start
          schema:
            type: integer
          example: 961846434
        - name: to
          in: query
          required: false
          description: Unix Timestamp from where to end
          schema:
            type: integer
          example: 1119612834
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/page_token'
        - $ref: '#/components/parameters/page_size'
      responses:
        '200':
          description: Transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tx_page'
          links:
            Continuation:
              operationId: GetTxsByAddress
              parameters:
                continuation: $response.body#/meta
        '400':
          description: Invalid address
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: Invalid continuation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /{protocol}/{network}/tx/{hash}:
    get:
      summary: Get a Transaction
      description: Returns a transaction by a user-defined transaction hash.
      operationId: GetTxByHash
      tags:
        - Transactions
      parameters:
        - $ref: '#/components/parameters/protocol'
        - $ref: '#/components/parameters/network'
        - $ref: '#/components/parameters/tx-hash'
      responses:
        '200':
          description: Transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tx'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /{protocol}/{network}/tx/{hash}/{index}:
    get:
      summary: Get a Transaction Output by Hash and Index
      description: Get a transaction output by a user-defined transaction hash and the transaction output index.
      operationId: GetTxOutputByHashAndIndex
      tags:
        - Transactions
      parameters:
        - in: path
          name: protocol
          required: true
          description: |
            Protocol handle, one of: `bitcoin`, `bitcoincash`, `dogecoin`, `litecoin`.
          schema:
            type: string
            default: bitcoin
          examples:
            Bitcoin:
              value: bitcoin
        - $ref: '#/components/parameters/network'
        - $ref: '#/components/parameters/tx-hash'
        - name: index
          in: path
          required: true
          description: Transaction output index.
          schema:
            type: integer
            default: 0
          example: 0
      responses:
        '200':
          description: Transaction output.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tx_output'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /{protocol}/{network}/txs:
    get:
      summary: Get a List of Transactions
      description: |
        Get a List of transactions, starting with the lastest one. Each call returns an array of the entire list.

        The response is paginated: use the returned `next_page_token` token as a query parameter to get the next page.
      operationId: GetTxs
      tags:
        - Transactions
      parameters:
        - $ref: '#/components/parameters/protocol'
        - $ref: '#/components/parameters/network'
        - name: block_hash
          in: query
          description: Filter by block hash. You can specify only one block hash at a time.
          schema:
            type: string
          example: '0x2444165297806ad5598e4569e5823b3df0cde3e48b346781ab632fa6cef1a0ec'
        - $ref: '#/components/parameters/assets'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/page_token'
        - $ref: '#/components/parameters/page_size'
      responses:
        '200':
          description: Transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tx_page'
          links:
            Continuation:
              operationId: GetTxs
              parameters:
                continuation: $response.body#/continuation
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: Invalid continuation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /{protocol}/{network}/tx/create:
    post:
      summary: Create an unsigned transaction
      description: |
        Creates an unsigned transaction for BTC, DOT and ETH.

        **Note** that Ethereum currently only supports singular transaction destinations
      operationId: TxCreate
      tags:
        - Transactions
      parameters:
        - $ref: '#/components/parameters/protocol'
        - $ref: '#/components/parameters/network'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tx_create'
      responses:
        200:
          description: An unsigned transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unsigned_tx'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        429:
          $ref: '#/components/responses/TooManyRequests'
        400:
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/error"
              example: {
                "type": "bad-request",
                "code": 16396,
                "title": "Bad Request",
                "status": 400,
                "detail": "only single destination transactions currently supported"
              }

  /{protocol}/{network}/tx/send:
    post:
      summary: Submit a Signed Transaction
      description: |
        Submit a signed transaction to the network.

        **Note**: A successful transaction may still be rejected on chain or not processed due to a too low fee.
        You can monitor successful transactions through Universal websockets.
      operationId: TxSend
      tags:
        - Transactions
      parameters:
        - $ref: '#/components/parameters/protocol'
        - $ref: '#/components/parameters/network'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signed_tx'
      responses:
        '200':
          description: A submitted Transaction ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tx_receipt'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /{protocol}/{network}/sync/block_number:
    get:
      summary: Get the Current Block Number
      description: Returns the current block number/height of the protocol.
      operationId: GetCurrentBlockNumber
      tags:
        - Blocks
      parameters:
        - $ref: '#/components/parameters/protocol'
        - $ref: '#/components/parameters/network'
      responses:
        '200':
          description: Current block number
          content:
            application/json:
              schema:
                format: int64
                type: integer
              example: 32656659
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /{protocol}/{network}/sync/block_id:
    get:
      summary: Get the Current Block Hash
      description: Get the current block id (hash) of the protocol.
      operationId: GetCurrentBlockHash
      tags:
        - Blocks
      parameters:
        - $ref: '#/components/parameters/protocol'
        - $ref: '#/components/parameters/network'
      responses:
        '200':
          description: Current block hash
          content:
            application/json:
              schema:
                type: string
              example: 3ea7cfb439e0baa4d91525b66b1f7b4e79ac0302a054a83d12f4e2ee7c933c8f
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /{protocol}/{network}/block/{block_identifier}:
    get:
      summary: Get a Block by Number or Hash
      description: |
        Get a block and all its transactions by a user-defined block number or block hash. 
        
        Use `-1` or `current` parameter to return the current block.
      operationId: GetBlockByNumber
      tags:
        - Blocks
      parameters:
        - $ref: '#/components/parameters/protocol'
        - $ref: '#/components/parameters/network'
        - $ref: '#/components/parameters/block_identifier'
      responses:
        '200':
          description: Block
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/block'
        '400':
          description: Invalid Block Identifier
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /{protocol}/{network}/block_identifier/{block_identifier}:
    get:
      summary: Get a Block Identifier by Number
      description: |
        Get the minimal block data, block header, by a user-defined block number or block hash. 
        
        Use `-1` or `current` parameter to return the current block.
      operationId: GetBlockIdentifierByNumber
      tags:
        - Blocks
      parameters:
        - $ref: '#/components/parameters/protocol'
        - $ref: '#/components/parameters/network'
        - $ref: '#/components/parameters/block_identifier'
      responses:
        '200':
          description: Block
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/block_identifier'
        '400':
          description: Invalid Block hash
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /{protocol}/{network}/block_identifiers:
    get:
      summary: Get a List of Block Identifiers
      description: |
        Returns a list of minimal block data, block headers such as block hash and block number.

        The response is paginated: use the returned `next_page_token` token as a query parameter to get the next page.
      operationId: GetBlockIdentifiers
      tags:
        - Blocks
      parameters:
        - $ref: '#/components/parameters/protocol'
        - $ref: '#/components/parameters/network'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/page_token'
        - $ref: '#/components/parameters/page_size'
      responses:
        '200':
          description: Block headers
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/block_identifiers'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
components:
  securitySchemes:
    apiKeyAuthHeader:
      type: apiKey
      in: header
      name: X-API-Key
      description: |
        Unlock higher TPS - Create your own API key in the [Blockdaemon App](https://app.blockdaemon.com).
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: Opaque
      description: |
        [Legacy Auth] Unlock higher TPS - Create your own API key in the [Blockdaemon App](https://app.blockdaemon.com).
  responses:
    TooManyRequests:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            type: too-many-requests
            title: Too Many Requests
            status: 429
            detail: Request rate limits have been exceeded. Try again after a few seconds.
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            type: not-found
            title: Not Found
            status: 404
    UnauthorizedError:
      description: Invalid or expired token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            type: unauthorized
            title: Invalid Token
            status: 401
    ServerError:
      description: An internal server error happened
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            type: internal-server-error
            title: Internal Server Error
            status: 500
    ServiceUnavailable:
      description: The resource you are trying to access is currently unavailable.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            type: unavailable
            title: Unavailable
            status: 503
  schemas:
    accounts_balances:
      type: object
      description: Accounts balances with account addressses as keys.
      additionalProperties:
        type: array
        items:
          $ref: '#/components/schemas/balance'
    accounts_obj:
      type: object
      properties:
        addresses:
          type: array
          default: ['1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa','bc1qex0aqq8mxqfh4cpl62eg755836djjx20yzuuu8']
          items:
            type: string
      example: ['1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa', 'bc1qex0aqq8mxqfh4cpl62eg755836djjx20yzuuu8']
    balances:
      description: Currency balances with asset paths as keys.
      type: array
      items:
        $ref: '#/components/schemas/balance'
    balance:
      description: Account balance object.
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/currency'
        confirmed_balance:
          type: string
        pending_balance:
          type: string
        confirmed_nonce:
          type: integer
        confirmed_block:
          type: integer
          example: 1313
    block:
      type: object
      description: Block object.
      properties:
        number:
          type: integer
          format: int64
          description: Block number
          example: 8000000
        id:
          type: string
          description: Block hash
          example: '0x123456070D674D44a7F9cb4Ab272bd88fAd004b5'
        parent_id:
          type: string
          description: Parent block hash
          example: '0xfcf029ffd36a6714aae09dcc7acbdd8f2b96327f'
        date:
          type: integer
          format: int64
          description: Block date in unix timestamp format
          example: 1571222657
        num_txs:
          type: integer
          description: Amount of transaction in the block
          example: 10
        txs:
          type: array
          description: List of normalized transactions presented in the block (not filtered or unknown model)
          items:
            $ref: '#/components/schemas/tx'
    block_identifier:
      type: object
      properties:
        number:
          type: integer
          format: int64
          description: Block number
          example: 8000000
        id:
          type: string
          description: Block hash
          example: '0x123456070D674D44a7F9cb4Ab272bd88fAd004b5'
        parent_id:
          type: string
          description: Parent block hash
          example: '0xfcf029ffd36a6714aae09dcc7acbdd8f2b96327f'
        date:
          type: integer
          format: int64
          description: Block date in Unix timestamp format
          example: 1571222657
    block_identifiers:
      type: object
      properties:
        total:
          type: integer
          description: Number of items in block identifiers
          example: 25
        data:
          type: array
          items:
            $ref: '#/components/schemas/block_identifier'
        meta:
          $ref: '#/components/schemas/meta'
    currency:
      type: object
      oneOf:
        - $ref: '#/components/schemas/native_currency'
        - $ref: '#/components/schemas/token_currency'
        - $ref: '#/components/schemas/smart_token_currency'
      discriminator:
        propertyName: type
        mapping:
          native: '#/components/schemas/native_currency'
          token: '#/components/schemas/token_currency'
          smart_token: '#/components/schemas/smart_token_currency'
    error:
      type: object
      properties:
        type:
          type: string
          description: HTTP error type
          example: bad-request
        code:
          type: integer
          description: Numeric error code
          example: 16384
        title:
          type: string
          description: Short error description
          example: Invalid Address
        status:
          type: integer
          description: HTTP status of the error
          example: 400
        detail:
          type: string
          description: Long error description
          example: The requested address is invalid on this protocol
    event:
      type: object
      properties:
        amount:
          type: integer
          nullable: true
          format: bigint
          example: 5000000000
          description: Coin amount transfered in the event
        date:
          type: integer
          format: int64
          description: Event date in unix timestamp format
        decimals:
          type: integer
          nullable: true
          description: Coin amount transfered in the event
        denomination:
          type: string
          nullable: true
          description: Symbol of currency, can be natibe currency or token currency
        destination:
          type: string
          nullable: true
          example: 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa
          description: Destination address of the event
        id:
          type: string
          description: Event identifier
        meta:
          type: object
          description: Protocol specific data that doesn't fit into a standard model.
        source:
          type: string
          nullable: true
          description: Source address of the event
        transaction_id:
          type: string
          description: Transaction identifer this event is presented
        type:
          type: string
          description: Event type
          example: transfer
    fee_estimate:
      type: object
      properties:
        most_recent_block:
          type: integer
          description: Most recent block
        estimated_fees:
          type: object
          description: Object containing fast, medium, slow fees
          properties:
            fast: {}
            medium: {}
            slow: {}
    meta:
      type: object
      nullable: true
      properties:
        paging:
          $ref: '#/components/schemas/paging'
    native_currency:
      type: object
      properties:
        asset_path:
          type: string
          description: Asset path of transferred currency
          example: ethereum/native/eth
        symbol:
          type: string
          description: Currency symbol
          example: ETH
        name:
          type: string
          description: Name of currency
          example: Ether
        decimals:
          type: integer
          description: Decimal places right to the comma
          example: 18
        type:
          type: string
          default: native
      required:
        - asset_path
        - type
    paging:
      type: object
      properties:
        next_page_token:
          type: string
    protocol_detail:
      type: object
      properties:
        source:
          type: string
          description: Backend API Type
          example: BlockScout RPC
        handle:
          type: string
          example: bitcoin
        genesis_number:
          type: integer
          format: int64
        endpoints:
          type: array
          items:
            type: string
    protocols_overview:
      type: object
      properties:
        protocols:
          type: array
          description: List of items each describing a pair of supported protocol and network.
          items:
            type: object
            properties:
              handle:
                type: string
                example: bitcoin
              network:
                type: string
                example: mainnet
    tx_create:
      type: object
      properties:
        from:
          type: string
          description: The source UTXO or account ID for the originating funds
          example: 31c129468975e4ef41135a405000e6428a399a03d023b6627eed4cb95faf19ca
        to:
          type: array
          description: A list of recipients
          items:
            $ref: "#/components/schemas/tx_destination"
        index:
          type: number
          description: The UTXO index or the account Nonce
          example: 5
        fee:
          description: The fee you are willing to pay (required only for Ethereum) for the transaction
          type: string
          example: 21000
      required:
        - from
        - to
        - index
    tx_destination:
      type: object
      description: A list of recipients
      properties:
        destination:
          type: string
          example: mkHS9ne12qx9pS9VojpwU5xtRd4T7X7ZUt
        amount:
          description: The amount you wish to transfer
          type: string
          example: 0.0001
      required:
        - destination
        - amount
    unsigned_tx:
      type: object
      properties:
        id:
          type: string
          description: The transaction ID
          example: 0x711fbebdf0c7bcf352dbd6fa7064d12e1f0fed5ddb2e562df742252287b1f5b1
        unsigned_tx:
          type: string
          description: The transaction data needed to sign
          example: e909843b9aca008252089481b7e08f65bdf5648606c89998a9cc81643976478601d1a94a200080808080
        meta:
          type: object
          description: Any extra information relevant regarding the created transaction
          example: {
            "fee": "15767277658",
            "signing_payload": "0x040000a8a62cdc29835a28cb4efc20f3e6f72ef3aed39f1f5ab00b577e43028c686802c6500300b50035014913a424000013000000e143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e688facf463d80d2f0e79f974c19469dde9d5a7b47513a5370abbdd7400e190b8"
          }
      required:
        - unsigned_tx
    report:
      type: object
      properties:
        fields:
          type: array
          description: Transaction items
          items:
            $ref: '#/components/schemas/report_field'
        items:
          type: integer
          description: The number of transactions in the report
          example: 1
        page_size:
          type: integer
          description: The limit number provided in the request or the default
          example: 100
        page_token:
          type: string
          description: Continuation token to send in the next request if there are more items
          example: xyz
      required:
        - fields
        - items
    report_field:
      type: object
      properties:
        protocol:
          type: string
          description: The protocol the address relates to
          example: Algorand
        address:
          type: string
          description: The wallet/account the transaction occurred
          example: GXL2EQ6JV54MTMP2IXOTF5CJLS7GAWMRDZMOY7JZAPO72AQRDDYGD6OX3E
        currency:
          type: string
          description: The currency symbol
          example: ALGO
        event_id:
          type: string
          description: The ID of the event within a transaction
          example: RNEYUT3MRYGT5ENSLIC7LGJCJMW6BXNS6SAW7A25DTYRW4TFJ5JA
        block:
          type: integer
          format: int64
          description: The block number the transaction occurred on
          example: 8986217
        timestamp:
          type: integer
          format: int32
          description: The unix timestamp when the transaction was added to a block
          example: 1599745403
        hash:
          type: string
          description: The transaction ID
          example: RNEYUT3MRYGT5ENSLIC7LGJCJMW6BXNS6SAW7A25DTYRW4TFJ5JA
        action:
          type: string
          description: The action type e.g. Transfer, Deposit, Staking Reward etc..
          example: pay
        value:
          type: string
          description: The amount of currency involved in the transaction (smallest unit)
          example: '1000000'
        sender_address:
          type: string
          description: The address where the funds originated
          example: T3BYUTYZCWV7UVK7IFYPC2UKH5VNBGVP4PUKSUBF5F6GQ244Y4I2XUWCQM
        fee:
          type: string
          description: How much was charged as a fee for processing the transaction
          example: '1000'
        decimals:
          type: integer
          format: int32
          description: The number of decimals in one coin, used to convert smallest unit to 1 whole coin if needed
          example: 6
        meta:
          $ref: '#/components/schemas/report_field_meta'
      required:
        - action
        - address
        - block
        - currency
        - decimals
        - event_id
        - fee
        - hash
        - protocol
        - sender_address
        - timestamp
        - value
    report_field_meta:
      description: Additional metadata bespoke to specific protocols
      oneOf:
        - $ref: '#/components/schemas/algorand_meta'
      discriminator:
        propertyName: type
        mapping:
          algorand_meta: '#/components/schemas/algorand_meta'
    smart_token:
      type: object
      properties:
        type:
          type: string
          description: Name of token mechanism (smart contract)
          example: ERC-20
        contract:
          type: string
          description: Address of contract
          example: '0xF00Fa860473130C1df10707223E66Cb4B839B165'
      required:
        - type
        - contract
    smart_token_currency:
      type: object
      properties:
        asset_path:
          type: string
          description: Asset path of transferred currency
          example: ethereum/native/eth
        symbol:
          type: string
          description: Currency symbol
          example: ETH
        name:
          type: string
          description: Name of currency
          example: Ether
        decimals:
          type: integer
          description: Decimal places right to the comma
          example: 18
        type:
          type: string
          default: smart_token
        detail:
          $ref: '#/components/schemas/smart_token'
      required:
        - asset_path
        - type
    signed_tx:
      type: object
      properties:
        tx:
          type: string
          description: The signed TX
          example: 0100000001ca19af5fb94ced7e62b623d0039a398a42e60050405a1341efe475894629c131010000008b483045022100d77b002b3142013b3f825a730f5bc3ead2014266f07ba4449269af0cf6f086310220365bca1d616ba86fac42ad69efd5f92c5ed6cf16f27ebf5ab55010efc72c219d014104417eb0abe69db2eca63c84eb44266c29c24973dc81cde16ca86c9d923630cb5f797bae7d7fab13498e06146111356eb271da74add05ebda8f72ff2b2878fddb7ffffffff0410270000000000001976a914344a0f48ca150ec2b903817660b9b68b13a6702688ac204e0000000000001976a914344a0f48ca150ec2b903817660b9b68b13a6702688ac30750000000000001976a914344a0f48ca150ec2b903817660b9b68b13a6702688ac48710000000000001976a914d6fa8814924b480fa7ff903b5ef61100ab4d92fe88ac00000000
      required:
        - tx
    tx:
      type: object
      properties:
        id:
          type: string
          description: Unique transaction identifier
          example: '0xF00Fa860473130C1df10707223E66Cb4B839B165'
        date:
          type: integer
          format: int64
          description: The transaction creation unix timestamp
          example: 1571222657
        block_id:
          type: string
          description: Block hash if mined, otherwise omitted.
          example: '0xaf2948aba2ed8cc7d5b7d4e4f4164a7c8819efc94d30aab3fce6904df68dbc07'
          nullable: true
        status:
          type: string
          description: Result status of the transaction
          enum:
            - completed
            - failed
        assets:
          type: array
          description: List of moved assets by asset path
          uniqueItems: true
          items:
            type: string
            example: ethereum/native/eth
          nullable: true
        nonce:
          type: integer
        num_events:
          type: integer
          description: List of transaction events
        meta:
          type: object
          description: Protocol specific data that doesn't fit into a standard model
        events:
          type: array
          items:
            $ref: '#/components/schemas/event'
          nullable: true
    tx_minify:
      type: object
      nullable: true
      description: Transaction
      properties:
        id:
          type: string
          description: Unique transaction identifier
          example: '0xF00Fa860473130C1df10707223E66Cb4B839B165'
        date:
          type: integer
          format: int64
          description: Unix timestamp
          example: 1571222657
        block_id:
          type: string
          description: ID of block.
          example: '0xaf2948aba2ed8cc7d5b7d4e4f4164a7c8819efc94d30aab3fce6904df68dbc07'
          nullable: true
        block_number:
          type: integer
          format: int64
          description: Height of block,
          example: 77477
          nullable: true
        confirmations:
          type: integer
          format: int64
          description: Total transaction confirmations
          example: 10
    tx_output:
      type: object
      properties:
        status:
          type: string
          description: Result status of the transaction output.
          enum:
            - mined
            - unknown
        is_spent:
          type: boolean
          description: If the transaction output was spent or not, if the value is true the `spent` transaction object will be presented
          example: true
        value:
          type: integer
          format: int64
          description: Amount of transaction output
          nullable: true
        mined:
          $ref: '#/components/schemas/tx_minify'
        spent:
          $ref: '#/components/schemas/tx_minify'
    token:
      type: object
      properties:
        type:
          type: string
          description: Name of token mechanism
          example: credit_alphanum4
        id:
          type: string
          description: Token identifier
          example: USD
        creator:
          type: string
          description: Address that created token
          example: GDUKMGUGDZQK6YHYA5Z6AY2G4XDSZPSZ3SW5UN3ARVMO6QSRDWP5YLEX
      required:
        - type
        - id
    token_currency:
      type: object
      properties:
        asset_path:
          type: string
          description: Asset path of transferred currency
          example: ethereum/native/eth
        symbol:
          type: string
          description: Currency symbol
          example: ETH
        name:
          type: string
          description: Name of currency
          example: Ether
        decimals:
          type: integer
          description: Decimal places right to the comma
          example: 18
        type:
          type: string
          default: token
        detail:
          $ref: '#/components/schemas/token'
      required:
        - asset_path
        - type
    tx_receipt:
      type: object
      properties:
        id:
          type: string
          description: The transaction ID
          example: 9c8ac345b443dd10a418ea0beaa320ef233dbae5590be2a11ac090e0e9839c1c
      required:
        - id
    tx_outputs:
      type: object
      description: List of transaction outputs
      properties:
        total:
          type: integer
          description: Number of total items
          example: 25
        data:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
                description: the status of the given transaction output
                example: mined
              is_spent:
                type: boolean
                description: whether the transaction output was spent or not
                example: false
              spent:
                allOf:
                  - $ref: '#/components/schemas/tx-output-response'
              value:
                type: integer
                format: int64
                description: the amount of tokens within the given output
                example: 600
              mined:
                allOf:
                  - $ref: '#/components/schemas/tx-output-response'
        meta:
          $ref: '#/components/schemas/meta'
    tx-output-response:
      type: object
      nullable: true
      properties:
        index:
          type: integer
          description: the output index within a given transaction
          example: 1
        tx_id:
          type: string
          description: the transaction identifier
          example: 57f7dc46786c5d56d260186d459f1246943dd6e83ca00235909dad1b826f20b4
        date:
          type: integer
          description: the transaction creation unix timestamp
          example: 1655419925
        block_id:
          type: string
          description: the hash identifier of the block which the transaction was mined
          example: 00000000000000000008ad1bdca4288143a0cb20e71de0808a066db89857e153
        block_number:
          type: integer
          description: the number of the block which the transaction was mined
          example: 741100
        confirmations:
          type: integer
          description: the number of confirmations the transaction took in order to be mined
          example: 1619
        meta:
          type: object
    tx_confirmation:
      type: object
      properties:
        current_height:
          type: integer
          format: int64
          description: Current Block Number
          example: 150123
        tx_id:
          type: string
          description: Transaction hash
          example: '0x123456070D674D44a7F9cb4Ab272bd88fAd004b5'
        confirmations:
          type: integer
          format: int64
          description: Total transaction confirmations
          example: 10
    tx_page:
      type: object
      properties:
        total:
          type: integer
          description: Number of items in txs
          example: 1
        data:
          type: array
          items:
            $ref: '#/components/schemas/tx'
        meta:
          $ref: '#/components/schemas/meta'
    algorand_meta:
      type: object
      nullable: true
      properties:
        type:
          type: string
          default: algorand_meta
        sender_reward:
          type: string
          example: '121176'
        recipient_reward:
          type: string
          example: '0'
        close:
          type: string
          example: XIU7HGGAJ3QOTATPDSIIHPFVKMICXKHMOR2FJKHTVLII4FAOA3CYZQDLG4
        close_amount:
          type: string
          example: '0'
        close_reward:
          type: string
          example: '0'
  parameters:
    protocol:
      in: path
      name: protocol
      required: true
      description: | 
        Protocol handle, one of: 
        `algorand`, `bitcoin`, `bitcoincash`, `dogecoin`, `ethereum`, `litecoin`, `near`, `oasis`, `optimism`, `polkadot`, `polygon`, `solana`, `stellar`, `tezos`, `xrp`.
      schema:
        type: string
        default: bitcoin
      examples:
        Bitcoin:
          value: bitcoin
    network:
      name: network
      in: path
      required: true
      description: Which network to target. Available networks can be found in the list of supported protocols or with /{protocol}.
      schema:
        type: string
        default: mainnet
      examples:
        Mainnet:
          value: mainnet
        Testnet:
          value: testnet
        Goerli:
          value: goerli
          description: Ethereum testnet networ
        Westend:
          value: westend
          description: Polkadot testnet network
    address:
      name: address
      in: path
      required: true
      description: The account address of the protocol.
      schema:
        type: string
        default: 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa
      examples:
        BTC_address:
          value: 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa
          description: BTC address
    order:
      name: order
      in: query
      description: The pagination order.
      schema:
        type: string
        enum:
          - desc
          - asc
        default: desc
    page_token:
      name: page_token
      in: query
      required: false
      description: The continuation token from earlier response.
      schema:
        type: string
      example: '8185.123'
    page_size:
      name: page_size
      in: query
      required: false
      description: |
        Max number of items to return in a response.
        Defaults to 25 and is capped at 100.
      schema:
        type: integer
      example: 25
    assets:
      name: assets
      in: query
      required: false
      description: Comma-separated list of asset paths to filter. If the list is empty, or all elements are empty, this filter has no effect.
      schema:
        type: string
      examples:
        ETH_native_currency:
          value: ethereum/native/eth
        ETH_smart_token:
          value: ethereum/contract/0x0f5d2fb29fb7d3cfee444a200298f468908cc942/erc-20
        More_than_one_asset:
          value: ethereum/native/eth,ethereum/contract/0x0f5d2fb29fb7d3cfee444a200298f468908cc942/erc-20
    tx-hash:
      name: hash
      in: path
      required: true
      description: The transaction Hash.
      schema:
        type: string
        default: '71d4f3412ec11128bbd9ce988d5bff2ec3bb6ea3953c8faf189d88ae49de9f7a'
      examples:
        BTC_tx_hash:
          value: '71d4f3412ec11128bbd9ce988d5bff2ec3bb6ea3953c8faf189d88ae49de9f7a'
        ETH_tx_hash:
          value: '0x6d550b76008d75d25a735d2d96c640cc13b7a711372557955fbd3b1cad8a78cb'
    block_identifier:
      name: block_identifier
      in: path
      required: true
      description: The block identifier, hash or number.
      schema:
        type: string
        default: '0000000000000000000590fc0f3eba193a278534220b2b37e9849e1a770ca959'
      examples:
        Block_hash:
          value: '0000000000000000000590fc0f3eba193a278534220b2b37e9849e1a770ca959'
        Block_number:
          value: '100000'
